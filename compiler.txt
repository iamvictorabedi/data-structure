#include <iostream>
using namespace std;
class mystack
{
	private:
	int top;
	char x[10];
	
	public:
	mystack()
	{
		top=0;
	}
	
	void push(char a)
	{
		x[++top]=a;
		
	}
	
	char peek()
	{
		return x[top];
	}
	
	char pop()
	{
		return x[top--];
	}	
	bool isEmpty() //true if stack is empty
{ return (top == 0); }


};

int main()
{
string input;
cout << "Enter string containing delimiters and no whitespace"<<endl;
cin >> input; 
if( input.length() == 1 ) //single item cannot be matched
return 0;

mystack theStack; //make stack

for(int j=0; j<input.length(); j++) //get chars in turn
{
char ch = input[j]; //get char
switch(ch)
{
case '<': //opening symbols
case '[':
case '(':
theStack.push(ch); //push them
break;
case '>': //closing symbols
case ']':
case ')':
if( !theStack.isEmpty() ) //if stack not empty,
{
char chx = theStack.pop(); //pop and check
if( (ch=='>' && chx!='<') ||(ch==']' && chx!='[') ||(ch==')' && chx!='(') )
{
cout << "Mismatched delimeter: "<< ch << " at char" << j << endl;
break;
}}} //end switch

if (!theStack.isEmpty())
   {char chx=theStack.pop();
     cout<<"Mismatched delimeter:"<<chx<<"at char"<<j<<endl;
	}
	} //end for
return 0;} //end main()
